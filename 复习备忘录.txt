1、树的遍历；
2、设计模式；
3、跨域的解决方案；
4、双向绑定的实现原理，Angular和Vue的实现有什么不同；
5、webpack和gulp的区别；
6、Diff算法的实现以及优化
7、层叠顺序
8、promises
9、深拷贝对象嵌套过多导致内存溢出如何处理
10、http2.0什么条件下才可以使用

美团
1、给定一个数组 一个值 返回满足和为传入值的下标，只需要找到一组即可 要求时间复杂度为O(N)
2、输入两个字符串 输入ab aab/aabbbb/abbb（以此类推）返回true，输入ab abc/ac/cab返回false

【华为】
【笔试】
1、输入一个字符串 在输入一个起点、终止点 把起止点的字符顺序进行交换 并输出
例如：I am a developer. 1 2
输出：I a am developer.

2、计算字符集 给定a:1,b:2,c:3@a:1,b:1 @前面的为总的字符集 表示可以使用的a有1个，b有两个，c有3个
@后面的为已经使用的字符个数，输出最后可用的字符数 如果没有已使用的字符 则输出a:1,b:2,c:3@
例如：a:1,b:2,c:3@a:1,b:1
输出：a:0,b:1,c:3
例如：a:1,b:2,c:3
输出：a:1,b:2,c:3@

3、随机给定1~9之间的几个数以及一个目标值
2可以当做5用 6可以当做9用 输出由这几个数字组成的所有数的集合中，从小到大排列的顺序为目标值的那一个数
其中给定的数字中不能同时出现2和5或者6和9 否则返回-1
如果包含不在1~9之间的数 也返回-1
例如：1,3,9  10
输出：139
理由：1,3,9,13,19,31,39,91,93,139,193,319,391,913,931

【一面】
1、输入一个数组，包含多个字符串，输出字符串中都出现过的字符，如果一个字符在每个字符串中多次出现，则输出多次
例如：输入["abcd","accd","abbc"]
输出：["a","c"]

例如：输入["abcdc","aecic","algcjc"]
输出：["a","c","c"]
